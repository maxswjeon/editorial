generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Metadata {
  version   Int      @id @default(autoincrement())
  data      String
  createdAt DateTime @default(now())
}

model Config {
  version   Int      @id @default(autoincrement())
  data      String
  createdAt DateTime @default(now())
}

model User {
  id        String    @id @default(uuid()) @db.Uuid
  email     String    @unique
  password  String?
  fullName  String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?
  ssoData   String?
  posts     Post[]
}

model Page {
  id        String    @id @default(uuid()) @db.Uuid
  template  String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?
}

model Post {
  id          String    @id @default(uuid()) @db.Uuid
  title       String
  description String
  slug        String
  content     String
  createdBy   User      @relation(fields: [createdById], references: [id])
  createdById String    @db.Uuid
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  publishedAt DateTime?
  deletedAt   DateTime?
}

enum AuthStrategyType {
  LOCAL
  OAUTH2
  SAML
}

model AuthStrategy {
  id     String           @id @default(uuid()) @db.Uuid
  name   String           @unique
  type   AuthStrategyType
  config String?
}

model AdminAuthStrategy {
  id     String           @id @default(uuid()) @db.Uuid
  name   String           @unique
  type   AuthStrategyType
  config String?
}
